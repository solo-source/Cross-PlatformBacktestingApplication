# File: .github/workflows/release.yml
name: Release

on:
  push:
    # Trigger when a new tag is pushed
    tags:
      - 'v*.*.*'

permissions:
  contents: write  # <-- This allows release creation and asset uploads

jobs:
  linux_release:
    name: Build & Release (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build Linux Executable
        run: |
          pyinstaller --name ModularBacktester --onefile \
                     --add-data "templates:templates" \
                     --add-data "assets:assets" \
                     src/gui/main_window.py

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux executable
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/ModularBacktester
          asset_name: ModularBacktester-linux
          asset_content_type: application/octet-stream

  windows_release:
    name: Build & Release (Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build Windows Executable
        run: |
          pyinstaller --name ModularBacktester.exe --onefile --windowed \
                     --add-data "templates;templates" \
                     --add-data "assets;assets" \
                     src/gui/main_window.py

      - name: Create or Get GitHub Release
        id: create_release_win
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows executable
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release_win.outputs.upload_url }}
          asset_path: dist/ModularBacktester.exe
          asset_name: ModularBacktester-windows.exe
          asset_content_type: application/octet-stream

  macos_release:
    name: Build & Release (macOS)
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build macOS App Bundle
        run: |
          pyinstaller --name ModularBacktester \
                     --onefile --windowed \
                     --add-data "templates:templates" \
                     --add-data "assets:assets" \
                     --osx-bundle-identifier com.example.modularbacktester \
                     src/gui/main_window.py

      - name: Create or Get GitHub Release
        id: create_release_mac
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS executable
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release_mac.outputs.upload_url }}
          asset_path: dist/ModularBacktester.app
          asset_name: ModularBacktester-macos.app
          asset_content_type: application/octet-stream